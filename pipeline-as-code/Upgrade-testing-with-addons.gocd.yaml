format_version: 3
pipelines:
  Upgrade-testing:
    group: enterprise
    label_template: ${COUNT}
    lock_behavior: none
    environment_variables:
      UPGRADE_VERSIONS_LIST: 19.4.0-9155, 19.7.0-9567, 19.8.0-9915
      ADDON_DOWNLOAD_URL: https://extensions.gocd.org/addons/postgres/versions
    secure_variables:
      EXTENSIONS_USER: AES:cqVQG+A2MQsMNKa6gyZtZA==:s8oKl//qdXIbuZunTnW9IjffCctQTO1QkmuJxAg2ij1lFBEEpigmkGXTvG68kmmZ
      EXTENSIONS_PASSWORD: AES:YWoBl6MsbXznv4NCb36HBw==:9nfJaKrF6xLVVDopR/4OV3br5hPyx42w2nfz6Ld1kAo=
    materials:
      git:
        git: https://git.gocd.io/git/gocd/installer-testing
        shallow_clone: true
        auto_update: true
        branch: master
        destination: '#{working_dir}'
      upload:
        pipeline: upload-addons
        stage: upload-addons
        name: upload
    stages:
    - Upgrade_tests:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
        jobs:
          defaultJob:
            timeout: 0
            environment_variables:
              HOME: /home/go
              GO_VERSION: 19.11.0
            elastic_profile_id: installers-testing
            tasks:
            - fetch:
                is_file: false
                source: postgresql-addon
                destination: '#{working_dir}'
                pipeline: go-addon-build/upload-addons
                stage: build-addons
                job: postgresql
                artifact_origin: gocd
                run_if: passed
            - fetch:
                is_file: false
                source: business-continuity-addon
                destination: '#{working_dir}'
                pipeline: go-addon-build/upload-addons
                stage: build-addons
                job: business-continuity
                artifact_origin: gocd
                run_if: passed
            - fetch:
                is_file: true
                source: addon_builds/addon_builds.json
                destination: '#{working_dir}'
                pipeline: upload-addons
                stage: upload-addons
                job: upload
                artifact_origin: gocd
                run_if: passed
            - exec:
                arguments:
                - -c
                - rm -rf lib/addons; mkdir -pv lib/addons; mv -v addon_builds.json
                  lib/addons; mv -v business-continuity-addon/*.jar lib/addons; mv
                  -v postgresql-addon/*.jar lib/addons
                command: /bin/bash
                working_directory: '#{working_dir}'
                run_if: passed
            - exec:
                arguments:
                - -lc
                - rake upgrade_tests_w_postgres
                command: /bin/bash
                working_directory: '#{working_dir}'
                run_if: passed
    parameters:
      addons_dir: released_addons
      upgrade_wrk_dir: upgrade_test
      working_dir: installer_test
