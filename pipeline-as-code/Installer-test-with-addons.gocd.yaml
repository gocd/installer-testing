format_version: 3
pipelines:
  Installer-testing:
    group: enterprise
    label_template: ${COUNT}
    lock_behavior: none
    environment_variables:
      GO_VERSION: 19.11.0
    materials:
      git:
        git: https://git.gocd.io/git/gocd/installer-testing
        blacklist:
        - '*.md,pipeline-as-code/*'
        shallow_clone: true
        auto_update: true
        branch: master
        destination: '#{working_dir}'
      upload:
        pipeline: upload-addons
        stage: upload-addons
        name: upload-addons
      package:
        pipeline: go-packages
        stage: fetch_from_build_go_cd
        name: package
    stages:
    - Fresh_install:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
        jobs:
          installer-tests:
            timeout: 0
            environment_variables:
              HOME: /home/go
            elastic_profile_id: installers-testing
            tasks:
            - fetch:
                is_file: false
                source: postgresql-addon
                destination: '#{working_dir}'
                pipeline: go-addon-build/upload-addons
                stage: build-addons
                job: postgresql
                artifact_origin: gocd
                run_if: passed
            - fetch:
                is_file: false
                source: business-continuity-addon
                destination: '#{working_dir}'
                pipeline: go-addon-build/upload-addons
                stage: build-addons
                job: business-continuity
                artifact_origin: gocd
                run_if: passed
            - fetch:
                is_file: true
                source: addon_builds/addon_builds.json
                destination: '#{working_dir}'
                pipeline: upload-addons
                stage: upload-addons
                job: upload
                artifact_origin: gocd
                run_if: passed
            - exec:
                arguments:
                - -c
                - mkdir -pv lib/addons; mv -v addon_builds.json lib/addons; mv -v
                  business-continuity-addon/*.jar lib/addons; mv -v postgresql-addon/*.jar
                  lib/addons
                command: /bin/bash
                working_directory: '#{working_dir}'
                run_if: passed
            - exec:
                arguments:
                - -lc
                - rake --trace test_installers_w_postgres
                command: /bin/bash
                working_directory: '#{working_dir}'
                run_if: passed
    parameters:
      working_dir: installer_test
